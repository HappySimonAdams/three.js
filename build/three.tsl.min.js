/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{TSL as e}from"three/webgpu";const t=e.BRDF_GGX,r=e.BRDF_Lambert,a=e.BasicShadowFilter,o=e.Break,i=e.Continue,n=e.DFGApprox,s=e.D_GGX,l=e.Discard,c=e.EPSILON,m=e.F_Schlick,p=e.Fn,d=e.INFINITY,u=e.If,g=e.Loop,h=e.NodeShaderStage,f=e.NodeType,x=e.NodeUpdateType,b=e.NodeAccess,v=e.PCFShadowFilter,w=e.PCFSoftShadowFilter,S=e.PI,T=e.PI2,_=e.Return,V=e.Schlick_to_F0,y=e.ScriptableNodeResources,D=e.ShaderNode,M=e.TBNViewMatrix,C=e.VSMShadowFilter,F=e.V_GGX_SmithCorrelated,I=e.abs,P=e.acesFilmicToneMapping,N=e.acos,R=e.add,B=e.addMethodChaining,k=e.addNodeElement,L=e.agxToneMapping,A=e.all,G=e.alphaT,O=e.and,W=e.anisotropy,j=e.anisotropyB,U=e.anisotropyT,z=e.any,E=e.append,q=e.arrayBuffer,Z=e.asin,X=e.assign,Y=e.atan,H=e.atan2,J=e.atomicAdd,K=e.atomicAnd,Q=e.atomicFunc,$=e.atomicMax,ee=e.atomicMin,te=e.atomicOr,re=e.atomicStore,ae=e.atomicSub,oe=e.atomicXor,ie=e.attenuationColor,ne=e.attenuationDistance,se=e.attribute,le=e.attributeArray,ce=e.backgroundBlurriness,me=e.backgroundIntensity,pe=e.backgroundRotation,de=e.batch,ue=e.billboarding,ge=e.bitAnd,he=e.bitNot,fe=e.bitOr,xe=e.bitXor,be=e.bitangentGeometry,ve=e.bitangentLocal,we=e.bitangentView,Se=e.bitangentWorld,Te=e.bitcast,_e=e.blendBurn,Ve=e.blendColor,ye=e.blendDodge,De=e.blendOverlay,Me=e.blendScreen,Ce=e.blur,Fe=e.bool,Ie=e.buffer,Pe=e.bufferAttribute,Ne=e.bumpMap,Re=e.burn,Be=e.bvec2,ke=e.bvec3,Le=e.bvec4,Ae=e.bypass,Ge=e.cache,Oe=e.call,We=e.cameraFar,je=e.cameraNear,Ue=e.cameraNormalMatrix,ze=e.cameraPosition,Ee=e.cameraProjectionMatrix,qe=e.cameraProjectionMatrixInverse,Ze=e.cameraViewMatrix,Xe=e.cameraWorldMatrix,Ye=e.cbrt,He=e.cdl,Je=e.ceil,Ke=e.checker,Qe=e.cineonToneMapping,$e=e.clamp,et=e.clearcoat,tt=e.clearcoatRoughness,rt=e.code,at=e.color,ot=e.colorSpaceToWorking,it=e.colorToDirection,nt=e.compute,st=e.cond,lt=e.context,ct=e.convert,mt=e.convertColorSpace,pt=e.convertToTexture,dt=e.cos,ut=e.cross,gt=e.cubeTexture,ht=e.dFdx,ft=e.dFdy,xt=e.dashSize,bt=e.defaultBuildStages,vt=e.defaultShaderStages,wt=e.defined,St=e.degrees,Tt=e.deltaTime,_t=e.densityFog,Vt=e.depth,yt=e.depthPass,Dt=e.difference,Mt=e.diffuseColor,Ct=e.directPointLight,Ft=e.directionToColor,It=e.dispersion,Pt=e.distance,Nt=e.div,Rt=e.dodge,Bt=e.dot,kt=e.drawIndex,Lt=e.dynamicBufferAttribute,At=e.element,Gt=e.emissive,Ot=e.equal,Wt=e.equals,jt=e.equirectUV,Ut=e.exp,zt=e.exp2,Et=e.expression,qt=e.faceDirection,Zt=e.faceForward,Xt=e.float,Yt=e.floor,Ht=e.fog,Jt=e.fract,Kt=e.frameGroup,Qt=e.frameId,$t=e.frontFacing,er=e.fwidth,tr=e.gain,rr=e.gapSize,ar=e.getConstNodeType,or=e.getCurrentStack,ir=e.getDirection,nr=e.getDistanceAttenuation,sr=e.getGeometryRoughness,lr=e.getNormalFromDepth,cr=e.getParallaxCorrectNormal,mr=e.getRoughness,pr=e.getScreenPosition,dr=e.getShIrradianceAt,ur=e.getTextureIndex,gr=e.getViewPosition,hr=e.glsl,fr=e.glslFn,xr=e.grayscale,br=e.greaterThan,vr=e.greaterThanEqual,wr=e.hash,Sr=e.highPrecisionModelNormalViewMatrix,Tr=e.highPrecisionModelViewMatrix,_r=e.hue,Vr=e.instance,yr=e.instanceIndex,Dr=e.instancedArray,Mr=e.instancedBufferAttribute,Cr=e.instancedDynamicBufferAttribute,Fr=e.instancedMesh,Ir=e.int,Pr=e.inverseSqrt,Nr=e.invocationLocalIndex,Rr=e.invocationSubgroupIndex,Br=e.ior,kr=e.iridescence,Lr=e.iridescenceIOR,Ar=e.iridescenceThickness,Gr=e.ivec2,Or=e.ivec3,Wr=e.ivec4,jr=e.js,Ur=e.label,zr=e.length,Er=e.lengthSq,qr=e.lessThan,Zr=e.lessThanEqual,Xr=e.lightPosition,Yr=e.lightTargetDirection,Hr=e.lightTargetPosition,Jr=e.lightViewPosition,Kr=e.lightingContext,Qr=e.lights,$r=e.linearDepth,ea=e.linearToneMapping,ta=e.localId,ra=e.log,aa=e.log2,oa=e.logarithmicDepthToViewZ,ia=e.loop,na=e.luminance,sa=e.mat2,la=e.mat3,ca=e.mat4,ma=e.matcapUV,pa=e.materialAOMap,da=e.materialAlphaTest,ua=e.materialAnisotropy,ga=e.materialAnisotropyVector,ha=e.materialAttenuationColor,fa=e.materialAttenuationDistance,xa=e.materialClearcoat,ba=e.materialClearcoatNormal,va=e.materialClearcoatRoughness,wa=e.materialColor,Sa=e.materialDispersion,Ta=e.materialEmissive,_a=e.materialIOR,Va=e.materialIridescence,ya=e.materialIridescenceIOR,Da=e.materialIridescenceThickness,Ma=e.materialLightMap,Ca=e.materialLineDashOffset,Fa=e.materialLineDashSize,Ia=e.materialLineGapSize,Pa=e.materialLineScale,Na=e.materialLineWidth,Ra=e.materialMetalness,Ba=e.materialNormal,ka=e.materialOpacity,La=e.materialPointWidth,Aa=e.materialReference,Ga=e.materialReflectivity,Oa=e.materialRefractionRatio,Wa=e.materialRotation,ja=e.materialRoughness,Ua=e.materialSheen,za=e.materialSheenRoughness,Ea=e.materialShininess,qa=e.materialSpecular,Za=e.materialSpecularColor,Xa=e.materialSpecularIntensity,Ya=e.materialSpecularStrength,Ha=e.materialThickness,Ja=e.materialTransmission,Ka=e.max,Qa=e.maxMipLevel,$a=e.metalness,eo=e.min,to=e.mix,ro=e.mixElement,ao=e.mod,oo=e.modInt,io=e.modelDirection,no=e.modelNormalMatrix,so=e.modelPosition,lo=e.modelScale,co=e.modelViewMatrix,mo=e.modelViewPosition,po=e.modelViewProjection,uo=e.modelWorldMatrix,go=e.modelWorldMatrixInverse,ho=e.morphReference,fo=e.mrt,xo=e.mul,bo=e.mx_aastep,vo=e.mx_cell_noise_float,wo=e.mx_contrast,So=e.mx_fractal_noise_float,To=e.mx_fractal_noise_vec2,_o=e.mx_fractal_noise_vec3,Vo=e.mx_fractal_noise_vec4,yo=e.mx_hsvtorgb,Do=e.mx_noise_float,Mo=e.mx_noise_vec3,Co=e.mx_noise_vec4,Fo=e.mx_ramplr,Io=e.mx_ramptb,Po=e.mx_rgbtohsv,No=e.mx_safepower,Ro=e.mx_splitlr,Bo=e.mx_splittb,ko=e.mx_srgb_texture_to_lin_rec709,Lo=e.mx_transform_uv,Ao=e.mx_worley_noise_float,Go=e.mx_worley_noise_vec2,Oo=e.mx_worley_noise_vec3,Wo=e.negate,jo=e.neutralToneMapping,Uo=e.nodeArray,zo=e.nodeImmutable,Eo=e.nodeObject,qo=e.nodeObjects,Zo=e.nodeProxy,Xo=e.normalFlat,Yo=e.normalGeometry,Ho=e.normalLocal,Jo=e.normalMap,Ko=e.normalView,Qo=e.normalWorld,$o=e.normalize,ei=e.not,ti=e.notEqual,ri=e.numWorkgroups,ai=e.objectDirection,oi=e.objectGroup,ii=e.objectPosition,ni=e.objectScale,si=e.objectViewPosition,li=e.objectWorldMatrix,ci=e.oneMinus,mi=e.or,pi=e.orthographicDepthToViewZ,di=e.oscSawtooth,ui=e.oscSine,gi=e.oscSquare,hi=e.oscTriangle,fi=e.output,xi=e.outputStruct,bi=e.overlay,vi=e.overloadingFn,wi=e.parabola,Si=e.parallaxDirection,Ti=e.parallaxUV,_i=e.parameter,Vi=e.pass,yi=e.passTexture,Di=e.pcurve,Mi=e.perspectiveDepthToViewZ,Ci=e.pmremTexture,Fi=e.pointUV,Ii=e.pointWidth,Pi=e.positionGeometry,Ni=e.positionLocal,Ri=e.positionPrevious,Bi=e.positionView,ki=e.positionViewDirection,Li=e.positionWorld,Ai=e.positionWorldDirection,Gi=e.posterize,Oi=e.pow,Wi=e.pow2,ji=e.pow3,Ui=e.pow4,zi=e.property,Ei=e.radians,qi=e.rand,Zi=e.range,Xi=e.rangeFog,Yi=e.reciprocal,Hi=e.reference,Ji=e.referenceBuffer,Ki=e.reflect,Qi=e.reflectVector,$i=e.reflectView,en=e.reflector,tn=e.refract,rn=e.refractVector,an=e.refractView,on=e.reinhardToneMapping,nn=e.remainder,sn=e.remap,ln=e.remapClamp,cn=e.renderGroup,mn=e.renderOutput,pn=e.rendererReference,dn=e.rotate,un=e.rotateUV,gn=e.roughness,hn=e.round,fn=e.rtt,xn=e.sRGBTransferEOTF,bn=e.sRGBTransferOETF,vn=e.sampler,wn=e.saturate,Sn=e.saturation,Tn=e.screen,_n=e.screenCoordinate,Vn=e.screenSize,yn=e.screenUV,Dn=e.scriptable,Mn=e.scriptableValue,Cn=e.select,Fn=e.setCurrentStack,In=e.shaderStages,Pn=e.shadow,Nn=e.sharedUniformGroup,Rn=e.sheen,Bn=e.sheenRoughness,kn=e.shiftLeft,Ln=e.shiftRight,An=e.shininess,Gn=e.sign,On=e.sin,Wn=e.sinc,jn=e.skinning,Un=e.skinningReference,zn=e.smoothstep,En=e.smoothstepElement,qn=e.specularColor,Zn=e.specularF90,Xn=e.spherizeUV,Yn=e.split,Hn=e.spritesheetUV,Jn=e.sqrt,Kn=e.stack,Qn=e.step,$n=e.storage,es=e.storageBarrier,ts=e.storageObject,rs=e.storageTexture,as=e.string,os=e.sub,is=e.subgroupIndex,ns=e.subgroupSize,ss=e.tan,ls=e.tangentGeometry,cs=e.tangentLocal,ms=e.tangentView,ps=e.tangentWorld,ds=e.temp,us=e.texture,gs=e.texture3D,hs=e.textureBarrier,fs=e.textureBicubic,xs=e.textureCubeUV,bs=e.textureLoad,vs=e.textureSize,ws=e.textureStore,Ss=e.thickness,Ts=e.threshold,_s=e.time,Vs=e.timerDelta,ys=e.timerGlobal,Ds=e.timerLocal,Ms=e.toOutputColorSpace,Cs=e.toWorkingColorSpace,Fs=e.toneMapping,Is=e.toneMappingExposure,Ps=e.toonOutlinePass,Ns=e.transformDirection,Rs=e.transformNormal,Bs=e.transformNormalToView,ks=e.transformedBentNormalView,Ls=e.transformedBitangentView,As=e.transformedBitangentWorld,Gs=e.transformedClearcoatNormalView,Os=e.transformedNormalView,Ws=e.transformedNormalWorld,js=e.transformedTangentView,Us=e.transformedTangentWorld,zs=e.transmission,Es=e.transpose,qs=e.tri,Zs=e.tri3,Xs=e.triNoise3D,Ys=e.triplanarTexture,Hs=e.triplanarTextures,Js=e.trunc,Ks=e.tslFn,Qs=e.uint,$s=e.uniform,el=e.uniformArray,tl=e.uniformGroup,rl=e.uniforms,al=e.userData,ol=e.uv,il=e.uvec2,nl=e.uvec3,sl=e.uvec4,ll=e.varying,cl=e.varyingProperty,ml=e.vec2,pl=e.vec3,dl=e.vec4,ul=e.vectorComponents,gl=e.velocity,hl=e.vertexColor,fl=e.vertexIndex,xl=e.vibrance,bl=e.viewZToLogarithmicDepth,vl=e.viewZToOrthographicDepth,wl=e.viewZToPerspectiveDepth,Sl=e.viewport,Tl=e.viewportBottomLeft,_l=e.viewportCoordinate,Vl=e.viewportDepthTexture,yl=e.viewportLinearDepth,Dl=e.viewportMipTexture,Ml=e.viewportResolution,Cl=e.viewportSafeUV,Fl=e.viewportSharedTexture,Il=e.viewportSize,Pl=e.viewportTexture,Nl=e.viewportTopLeft,Rl=e.viewportUV,Bl=e.wgsl,kl=e.wgslFn,Ll=e.workgroupArray,Al=e.workgroupBarrier,Gl=e.workgroupId,Ol=e.workingToColorSpace,Wl=e.xor;export{t as BRDF_GGX,r as BRDF_Lambert,a as BasicShadowFilter,o as Break,i as Continue,n as DFGApprox,s as D_GGX,l as Discard,c as EPSILON,m as F_Schlick,p as Fn,d as INFINITY,u as If,g as Loop,b as NodeAccess,h as NodeShaderStage,f as NodeType,x as NodeUpdateType,v as PCFShadowFilter,w as PCFSoftShadowFilter,S as PI,T as PI2,_ as Return,V as Schlick_to_F0,y as ScriptableNodeResources,D as ShaderNode,M as TBNViewMatrix,C as VSMShadowFilter,F as V_GGX_SmithCorrelated,I as abs,P as acesFilmicToneMapping,N as acos,R as add,B as addMethodChaining,k as addNodeElement,L as agxToneMapping,A as all,G as alphaT,O as and,W as anisotropy,j as anisotropyB,U as anisotropyT,z as any,E as append,q as arrayBuffer,Z as asin,X as assign,Y as atan,H as atan2,J as atomicAdd,K as atomicAnd,Q as atomicFunc,$ as atomicMax,ee as atomicMin,te as atomicOr,re as atomicStore,ae as atomicSub,oe as atomicXor,ie as attenuationColor,ne as attenuationDistance,se as attribute,le as attributeArray,ce as backgroundBlurriness,me as backgroundIntensity,pe as backgroundRotation,de as batch,ue as billboarding,ge as bitAnd,he as bitNot,fe as bitOr,xe as bitXor,be as bitangentGeometry,ve as bitangentLocal,we as bitangentView,Se as bitangentWorld,Te as bitcast,_e as blendBurn,Ve as blendColor,ye as blendDodge,De as blendOverlay,Me as blendScreen,Ce as blur,Fe as bool,Ie as buffer,Pe as bufferAttribute,Ne as bumpMap,Re as burn,Be as bvec2,ke as bvec3,Le as bvec4,Ae as bypass,Ge as cache,Oe as call,We as cameraFar,je as cameraNear,Ue as cameraNormalMatrix,ze as cameraPosition,Ee as cameraProjectionMatrix,qe as cameraProjectionMatrixInverse,Ze as cameraViewMatrix,Xe as cameraWorldMatrix,Ye as cbrt,He as cdl,Je as ceil,Ke as checker,Qe as cineonToneMapping,$e as clamp,et as clearcoat,tt as clearcoatRoughness,rt as code,at as color,ot as colorSpaceToWorking,it as colorToDirection,nt as compute,st as cond,lt as context,ct as convert,mt as convertColorSpace,pt as convertToTexture,dt as cos,ut as cross,gt as cubeTexture,ht as dFdx,ft as dFdy,xt as dashSize,bt as defaultBuildStages,vt as defaultShaderStages,wt as defined,St as degrees,Tt as deltaTime,_t as densityFog,Vt as depth,yt as depthPass,Dt as difference,Mt as diffuseColor,Ct as directPointLight,Ft as directionToColor,It as dispersion,Pt as distance,Nt as div,Rt as dodge,Bt as dot,kt as drawIndex,Lt as dynamicBufferAttribute,At as element,Gt as emissive,Ot as equal,Wt as equals,jt as equirectUV,Ut as exp,zt as exp2,Et as expression,qt as faceDirection,Zt as faceForward,Xt as float,Yt as floor,Ht as fog,Jt as fract,Kt as frameGroup,Qt as frameId,$t as frontFacing,er as fwidth,tr as gain,rr as gapSize,ar as getConstNodeType,or as getCurrentStack,ir as getDirection,nr as getDistanceAttenuation,sr as getGeometryRoughness,lr as getNormalFromDepth,cr as getParallaxCorrectNormal,mr as getRoughness,pr as getScreenPosition,dr as getShIrradianceAt,ur as getTextureIndex,gr as getViewPosition,hr as glsl,fr as glslFn,xr as grayscale,br as greaterThan,vr as greaterThanEqual,wr as hash,Sr as highPrecisionModelNormalViewMatrix,Tr as highPrecisionModelViewMatrix,_r as hue,Vr as instance,yr as instanceIndex,Dr as instancedArray,Mr as instancedBufferAttribute,Cr as instancedDynamicBufferAttribute,Fr as instancedMesh,Ir as int,Pr as inverseSqrt,Nr as invocationLocalIndex,Rr as invocationSubgroupIndex,Br as ior,kr as iridescence,Lr as iridescenceIOR,Ar as iridescenceThickness,Gr as ivec2,Or as ivec3,Wr as ivec4,jr as js,Ur as label,zr as length,Er as lengthSq,qr as lessThan,Zr as lessThanEqual,Xr as lightPosition,Yr as lightTargetDirection,Hr as lightTargetPosition,Jr as lightViewPosition,Kr as lightingContext,Qr as lights,$r as linearDepth,ea as linearToneMapping,ta as localId,ra as log,aa as log2,oa as logarithmicDepthToViewZ,ia as loop,na as luminance,sa as mat2,la as mat3,ca as mat4,ma as matcapUV,pa as materialAOMap,da as materialAlphaTest,ua as materialAnisotropy,ga as materialAnisotropyVector,ha as materialAttenuationColor,fa as materialAttenuationDistance,xa as materialClearcoat,ba as materialClearcoatNormal,va as materialClearcoatRoughness,wa as materialColor,Sa as materialDispersion,Ta as materialEmissive,_a as materialIOR,Va as materialIridescence,ya as materialIridescenceIOR,Da as materialIridescenceThickness,Ma as materialLightMap,Ca as materialLineDashOffset,Fa as materialLineDashSize,Ia as materialLineGapSize,Pa as materialLineScale,Na as materialLineWidth,Ra as materialMetalness,Ba as materialNormal,ka as materialOpacity,La as materialPointWidth,Aa as materialReference,Ga as materialReflectivity,Oa as materialRefractionRatio,Wa as materialRotation,ja as materialRoughness,Ua as materialSheen,za as materialSheenRoughness,Ea as materialShininess,qa as materialSpecular,Za as materialSpecularColor,Xa as materialSpecularIntensity,Ya as materialSpecularStrength,Ha as materialThickness,Ja as materialTransmission,Ka as max,Qa as maxMipLevel,$a as metalness,eo as min,to as mix,ro as mixElement,ao as mod,oo as modInt,io as modelDirection,no as modelNormalMatrix,so as modelPosition,lo as modelScale,co as modelViewMatrix,mo as modelViewPosition,po as modelViewProjection,uo as modelWorldMatrix,go as modelWorldMatrixInverse,ho as morphReference,fo as mrt,xo as mul,bo as mx_aastep,vo as mx_cell_noise_float,wo as mx_contrast,So as mx_fractal_noise_float,To as mx_fractal_noise_vec2,_o as mx_fractal_noise_vec3,Vo as mx_fractal_noise_vec4,yo as mx_hsvtorgb,Do as mx_noise_float,Mo as mx_noise_vec3,Co as mx_noise_vec4,Fo as mx_ramplr,Io as mx_ramptb,Po as mx_rgbtohsv,No as mx_safepower,Ro as mx_splitlr,Bo as mx_splittb,ko as mx_srgb_texture_to_lin_rec709,Lo as mx_transform_uv,Ao as mx_worley_noise_float,Go as mx_worley_noise_vec2,Oo as mx_worley_noise_vec3,Wo as negate,jo as neutralToneMapping,Uo as nodeArray,zo as nodeImmutable,Eo as nodeObject,qo as nodeObjects,Zo as nodeProxy,Xo as normalFlat,Yo as normalGeometry,Ho as normalLocal,Jo as normalMap,Ko as normalView,Qo as normalWorld,$o as normalize,ei as not,ti as notEqual,ri as numWorkgroups,ai as objectDirection,oi as objectGroup,ii as objectPosition,ni as objectScale,si as objectViewPosition,li as objectWorldMatrix,ci as oneMinus,mi as or,pi as orthographicDepthToViewZ,di as oscSawtooth,ui as oscSine,gi as oscSquare,hi as oscTriangle,fi as output,xi as outputStruct,bi as overlay,vi as overloadingFn,wi as parabola,Si as parallaxDirection,Ti as parallaxUV,_i as parameter,Vi as pass,yi as passTexture,Di as pcurve,Mi as perspectiveDepthToViewZ,Ci as pmremTexture,Fi as pointUV,Ii as pointWidth,Pi as positionGeometry,Ni as positionLocal,Ri as positionPrevious,Bi as positionView,ki as positionViewDirection,Li as positionWorld,Ai as positionWorldDirection,Gi as posterize,Oi as pow,Wi as pow2,ji as pow3,Ui as pow4,zi as property,Ei as radians,qi as rand,Zi as range,Xi as rangeFog,Yi as reciprocal,Hi as reference,Ji as referenceBuffer,Ki as reflect,Qi as reflectVector,$i as reflectView,en as reflector,tn as refract,rn as refractVector,an as refractView,on as reinhardToneMapping,nn as remainder,sn as remap,ln as remapClamp,cn as renderGroup,mn as renderOutput,pn as rendererReference,dn as rotate,un as rotateUV,gn as roughness,hn as round,fn as rtt,xn as sRGBTransferEOTF,bn as sRGBTransferOETF,vn as sampler,wn as saturate,Sn as saturation,Tn as screen,_n as screenCoordinate,Vn as screenSize,yn as screenUV,Dn as scriptable,Mn as scriptableValue,Cn as select,Fn as setCurrentStack,In as shaderStages,Pn as shadow,Nn as sharedUniformGroup,Rn as sheen,Bn as sheenRoughness,kn as shiftLeft,Ln as shiftRight,An as shininess,Gn as sign,On as sin,Wn as sinc,jn as skinning,Un as skinningReference,zn as smoothstep,En as smoothstepElement,qn as specularColor,Zn as specularF90,Xn as spherizeUV,Yn as split,Hn as spritesheetUV,Jn as sqrt,Kn as stack,Qn as step,$n as storage,es as storageBarrier,ts as storageObject,rs as storageTexture,as as string,os as sub,is as subgroupIndex,ns as subgroupSize,ss as tan,ls as tangentGeometry,cs as tangentLocal,ms as tangentView,ps as tangentWorld,ds as temp,us as texture,gs as texture3D,hs as textureBarrier,fs as textureBicubic,xs as textureCubeUV,bs as textureLoad,vs as textureSize,ws as textureStore,Ss as thickness,Ts as threshold,_s as time,Vs as timerDelta,ys as timerGlobal,Ds as timerLocal,Ms as toOutputColorSpace,Cs as toWorkingColorSpace,Fs as toneMapping,Is as toneMappingExposure,Ps as toonOutlinePass,Ns as transformDirection,Rs as transformNormal,Bs as transformNormalToView,ks as transformedBentNormalView,Ls as transformedBitangentView,As as transformedBitangentWorld,Gs as transformedClearcoatNormalView,Os as transformedNormalView,Ws as transformedNormalWorld,js as transformedTangentView,Us as transformedTangentWorld,zs as transmission,Es as transpose,qs as tri,Zs as tri3,Xs as triNoise3D,Ys as triplanarTexture,Hs as triplanarTextures,Js as trunc,Ks as tslFn,Qs as uint,$s as uniform,el as uniformArray,tl as uniformGroup,rl as uniforms,al as userData,ol as uv,il as uvec2,nl as uvec3,sl as uvec4,ll as varying,cl as varyingProperty,ml as vec2,pl as vec3,dl as vec4,ul as vectorComponents,gl as velocity,hl as vertexColor,fl as vertexIndex,xl as vibrance,bl as viewZToLogarithmicDepth,vl as viewZToOrthographicDepth,wl as viewZToPerspectiveDepth,Sl as viewport,Tl as viewportBottomLeft,_l as viewportCoordinate,Vl as viewportDepthTexture,yl as viewportLinearDepth,Dl as viewportMipTexture,Ml as viewportResolution,Cl as viewportSafeUV,Fl as viewportSharedTexture,Il as viewportSize,Pl as viewportTexture,Nl as viewportTopLeft,Rl as viewportUV,Bl as wgsl,kl as wgslFn,Ll as workgroupArray,Al as workgroupBarrier,Gl as workgroupId,Ol as workingToColorSpace,Wl as xor};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
